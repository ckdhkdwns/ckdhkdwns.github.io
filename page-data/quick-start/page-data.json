{"componentChunkName":"component---src-templates-post-jsx","path":"/quick-start/","result":{"data":{"site":{"siteMetadata":{"title":"ckdhkdwns"}},"markdownRemark":{"id":"a1d16ed0-1666-5974-99fb-66eacb99a859","excerpt":"Flask 공식문서 A Minimal Application 플라스크 앱의 형태는 다음과 같다.  클래스를 import한다. 이란 instance를 만든다. 함수를 통해 어떤 URL이  앱의 함수를 실행시킬건지 지정한다.  함수는 사용자의 화면에 출력할 메세지를 리턴한다. 이 함수를  로 저장한다. (충돌 방지를 위해 이름을 로 저장하지 않도록 한다.)\n이…","html":"<p><a href=\"https://flask.palletsprojects.com/en/2.2.x/\">Flask 공식문서</a></p>\n<h2>A Minimal Application</h2>\n<p>플라스크 앱의 형태는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span> \n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">hello_world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string\">\"&lt;p>Hello, World!&lt;/p>\"</span>\n\n<span class=\"token comment\">#app.run()</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">Flask</code> 클래스를 import한다.</li>\n<li><code class=\"language-text\">app</code>이란 instance를 만든다.</li>\n<li><code class=\"language-text\">route()</code>함수를 통해 어떤 URL이 <code class=\"language-text\">Flask</code> 앱의 함수를 실행시킬건지 지정한다.</li>\n<li><code class=\"language-text\">hello_word()</code> 함수는 사용자의 화면에 출력할 메세지를 리턴한다.</li>\n</ol>\n<p>이 함수를 <code class=\"language-text\">app.py</code> 로 저장한다. (충돌 방지를 위해 이름을 <code class=\"language-text\">flask.py</code>로 저장하지 않도록 한다.)\n이후 <code class=\"language-text\">flask</code> 명령어나 <code class=\"language-text\">python -m flask</code>를 통해 앱을 실행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ flask <span class=\"token parameter variable\">--app</span> app run\n* Serving Flask app <span class=\"token string\">'app'</span>\n* Running on http://127.0.0.1:5000 <span class=\"token punctuation\">(</span>Press CTRL+C to quit<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Routing</h2>\n<p>현대의 웹 어플리케이션들은 유저를 돕기 위해 의미있는 URL들을 사용한다.\n<code class=\"language-text\">route()</code>함수를 통해 함수와 URL을 연결해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string\">'Index Page'</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string\">'Hello, World'</span></code></pre></div>\n<h2>Variable Rules</h2>\n<p><code class=\"language-text\">&lt;variable_name></code>을 URL에 삽입해 변수를 받아올 수 있다. 함수는 <code class=\"language-text\">&lt;variable_name></code>의 값을 매개변수로 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> markupsafe <span class=\"token keyword\">import</span> escape\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user/&lt;username>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">show_user_profile</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># show the user profile for that user</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string-interpolation\"><span class=\"token string\">f'User </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>escape<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/post/&lt;int:post_id>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">show_post</span><span class=\"token punctuation\">(</span>post_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># show the post with the given id, the id is an integer</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string-interpolation\"><span class=\"token string\">f'Post </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>post_id<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/path/&lt;path:subpath>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span>  <span class=\"token function\">show_subpath</span><span class=\"token punctuation\">(</span>subpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># show the subpath after /path/</span>\n    <span class=\"token keyword\">return</span>  <span class=\"token string-interpolation\"><span class=\"token string\">f'Subpath </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>escape<span class=\"token punctuation\">(</span>subpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span></code></pre></div>\n<h2>HTTP Methods</h2>\n<p>웹 어플리케이션은 URL에 접근할 때 각각 다른 HTTP 메소드들을 사용한다. 기본적으로, <code class=\"language-text\">@app.route()</code>는 <code class=\"language-text\">GET</code> 요청에만 응답한다. <code class=\"language-text\">methods</code> 매개변수를 이용해 HTTP 메소드들을 조작할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> request\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> do_the_login<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> show_the_login_form<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 예제는 각각의 메소드들을 하나의 함수안에 라우팅했다. </p>\n<p>아래와 같이 <code class=\"language-text\">@app.get()</code>과 <code class=\"language-text\">@app.post()</code>를 사용하면 각각의 메서드들을 조작하는 함수들을 만들 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">login_get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> show_the_login_form<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">login_post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> do_the_login<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Static Files</h2>\n<p>동적 웹 애플리케이션은 정적 파일들도 필요하다. 간단하다. <code class=\"language-text\">static</code>폴더를 생성하면 <code class=\"language-text\">/static</code> 경로에서 사용 가능하다.</p>\n<p>URL을 생성하고 싶다면 아래와 같이 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">,</span> filename<span class=\"token operator\">=</span><span class=\"token string\">'style.css'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>물론 <code class=\"language-text\">static/style.css</code>가 존재해야 한다.</p>\n<h2>Rendering Templates</h2>\n<p><code class=\"language-text\">render_template()</code>메소드를 통해 템플릿을 렌더링할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> render_template\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/hello/&lt;name>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'hello.html'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">render_template</code>는 <code class=\"language-text\">template</code> 폴더에서 <code class=\"language-text\">hello.html</code>을 찾고 <code class=\"language-text\">name</code> 의 값을 넘겨준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- template/hello.html --></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Hello from Flask<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n{% if name %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello {{ name }}!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n{% else %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello, World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n{% endif %}</code></pre></div>","frontmatter":{"title":"Flask - Quick start","date":"September 09, 2022","update":null,"tags":["flask","python"],"series":null},"fields":{"slug":"/quick-start/","readingTime":{"minutes":3.2}}},"seriesList":{"edges":[{"node":{"id":"e7987a21-ba57-5c7e-b381-0d8f3dfa32e5","fields":{"slug":"/sql-injection/"},"frontmatter":{"title":"SQL Intection 실습"}}},{"node":{"id":"afc9487d-c380-5ed0-95b8-fbcb262d5b20","fields":{"slug":"/install-java/"},"frontmatter":{"title":"Ubuntu에서 Java 설치"}}},{"node":{"id":"97184d2d-2ee4-59b1-b11a-2334b7b5aaa7","fields":{"slug":"/crack-korean/"},"frontmatter":{"title":"Flask Response 한글 깨짐 현상"}}},{"node":{"id":"a1d16ed0-1666-5974-99fb-66eacb99a859","fields":{"slug":"/quick-start/"},"frontmatter":{"title":"Flask - Quick start"}}},{"node":{"id":"078a157d-f33a-5da8-ad18-d261b91dd5c4","fields":{"slug":"/gh-pages-deploy/"},"frontmatter":{"title":"gh-pages로 React 배포하기"}}},{"node":{"id":"da6803fa-9c81-5549-b8f6-6eabb901d753","fields":{"slug":"/init-in-goormide/"},"frontmatter":{"title":"VScode에 Spring 개발환경 구축하기"}}},{"node":{"id":"47462e05-5b2b-547d-a1f8-134ab0f34ca3","fields":{"slug":"/websocket/"},"frontmatter":{"title":"Springboot Stomp로 채팅 구현하기"}}},{"node":{"id":"765353ae-1d9a-5169-813e-26273d7b099c","fields":{"slug":"/jwt/"},"frontmatter":{"title":"JWT(JSON Web Token)"}}},{"node":{"id":"9dc42957-bf8a-5400-93e3-4f41385c9f04","fields":{"slug":"/ubuntu-sudo-apt-get-update/"},"frontmatter":{"title":"Ubuntu sudo apt-get update 다음 서명들은 공개키가 없기 때문에 인증할 수 없습니다"}}},{"node":{"id":"8e96eb32-9867-5be7-b544-d5dcdc566a4f","fields":{"slug":"/codespace-cannot-read-png/"},"frontmatter":{"title":"Github Codespace 웹 보기를 로드하는 동안 오류가 발생했습니다."}}}]},"previous":{"fields":{"slug":"/crack-korean/"},"frontmatter":{"title":"Flask Response 한글 깨짐 현상"}},"next":{"fields":{"slug":"/gh-pages-deploy/"},"frontmatter":{"title":"gh-pages로 React 배포하기"}}},"pageContext":{"id":"a1d16ed0-1666-5974-99fb-66eacb99a859","series":null,"previousPostId":"97184d2d-2ee4-59b1-b11a-2334b7b5aaa7","nextPostId":"078a157d-f33a-5da8-ad18-d261b91dd5c4"}},"staticQueryHashes":[]}