{"componentChunkName":"component---src-templates-post-jsx","path":"/sql-injection/","result":{"data":{"site":{"siteMetadata":{"title":"ckdhkdwns"}},"markdownRemark":{"id":"1b25e811-72ac-512b-9522-49560e93189a","excerpt":"실습환경 칼리 리눅스에서 아파치 웹 서버를 열어 실습을 진행하였다.  Kali-Linux: 5.4.0 Apache: 2.4.41 코드 분석 login.php\n페이지에 들어가면 간단한 로그인 폼이 있다.\nlogin-form 로그인을 처리하는 코드이다. POST 형식으로 id와 pw를 받고 query 구문을 통해 DB에서 id와 pw가 일치하는 정보를 찾는다…","html":"<h2>실습환경</h2>\n<p>칼리 리눅스에서 아파치 웹 서버를 열어 실습을 진행하였다.</p>\n<blockquote>\n<p> Kali-Linux: 5.4.0<br>\nApache: 2.4.41</p>\n</blockquote>\n<h2>코드 분석</h2>\n<p>login.php\n페이지에 들어가면 간단한 로그인 폼이 있다.\n<img src=\"/static/login-form-ff9e8f7e1d89aeea430b96de6e9343be.jpg\" alt=\"login-form\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token operator\">...</span>\n   \t$id<span class=\"token operator\">=</span>$_POST<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        $pw<span class=\"token operator\">=</span>$_POST<span class=\"token punctuation\">[</span><span class=\"token string\">'pw'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n        $query <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from member where id='$id' and pw='$pw'\"</span><span class=\"token punctuation\">;</span>\n        $result <span class=\"token operator\">=</span> $connect<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>$query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span>$result<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                 $_SESSION<span class=\"token punctuation\">[</span><span class=\"token string\">'userid'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>$id<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span>$_SESSION<span class=\"token punctuation\">[</span><span class=\"token string\">'userid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">?</span><span class=\"token operator\">></span>      <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n                                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"로그인 되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                        echo <span class=\"token string\">\"session fail\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">?</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n                       <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아이디 혹은 비밀번호가 잘못되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                       history<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n    <span class=\"token operator\">...</span></code></pre></div>\n<p>로그인을 처리하는 코드이다. POST 형식으로 id와 pw를 받고 query 구문을 통해 DB에서 id와 pw가 일치하는 정보를 찾는다. </p>\n<p>취약점이 있는 부분은 바로 아래 코드 부분이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from member where id='<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>' and pw='<span class=\"token interpolation\"><span class=\"token variable\">$pw</span></span>'\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$connect</span><span class=\"token operator\">-></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span></code></pre></div>\n<p>요청에서 받아온 id와 pw값을 검증 없이 그대로 사용하고 있다.\npw값에 <code class=\"language-text\">' or id='admin'#</code>를 대입하면 로그인 폼이 우회된다.\n<img src=\"/static/login-success-fbf0ee8e1af6a74651fe98155ce0e607.jpg\" alt=\"login-success\"></p>\n<h2>원리</h2>\n<p>쿼리 부분을 다시 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from member where id='<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>' and pw='<span class=\"token interpolation\"><span class=\"token variable\">$pw</span></span>'\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기서 pw값에 <code class=\"language-text\">' or id='admin'#</code>가 들어간다면</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from member where id='<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>' and pw='' or id='admin'#'\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같은 형태가 된다.<br>\nSQL상에서 AND연산자는 OR연산자보다 우선순위가 높다.\n<a href=\"https://www.mysqltutorial.org/mysql-or/\">MYSQL 연산자 우선순위</a></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">\t<span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select * from member where (id='<span class=\"token interpolation\"><span class=\"token variable\">$id</span></span>' and pw='') or id='admin'#'\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결국 쿼리문은 DB에서 id가 admin인 row를 찾고 인증을 우회하게 되는 것이다. </p>\n<p>제일 상단의 코드를 보면 사용자가 입력한 id값에 따라 세션이 생성된다. 즉, 공격자가 유저들의 id를 알기만 하면 그 유저의 권한을 가질수 있게 되는 것이다.</p>\n<h2>취약점 보완</h2>\n<ol>\n<li><code class=\"language-text\">SELECT</code>, <code class=\"language-text\">UNION</code>과 같은 SQL 함수와 특수문자를 필터링</li>\n<li>id와 pw를 한 번에 검색하는 방식 -> id만 검색하고 pw는 id 검색 후 나온 row의 pw와 대조</li>\n<li>if문 안의 동치연산자 <code class=\"language-text\">==</code>를 <code class=\"language-text\">===</code>로 변경 </li>\n</ol>\n<h2>결과</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\t$id<span class=\"token operator\">=</span><span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/[\\'\\;\\\"\\=\\-\\-\\#\\/*]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> $_POST<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        $pw<span class=\"token operator\">=</span>$_POST<span class=\"token punctuation\">[</span><span class=\"token string\">'pw'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/(union|select|from|where)/i'</span><span class=\"token punctuation\">,</span> $id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        $query <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from member where id='$id'\"</span><span class=\"token punctuation\">;</span>\n        $result <span class=\"token operator\">=</span> $connect<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>$query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span>$result<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                $row<span class=\"token operator\">=</span><span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span>$result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$row<span class=\"token punctuation\">[</span><span class=\"token string\">'pw'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> $pw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        $_SESSION<span class=\"token punctuation\">[</span><span class=\"token string\">'userid'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>$id<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span>$_SESSION<span class=\"token punctuation\">[</span><span class=\"token string\">'userid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token operator\">?</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n                                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"로그인 되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n                        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                                echo <span class=\"token string\">\"session fail\"</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span> \n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token operator\">?</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n                               <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아이디 혹은 비밀번호가 잘못되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               history<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">?</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n                       <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아이디 혹은 비밀번호가 잘못되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                       history<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n        <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"SQL Intection 실습","date":"July 22, 2021","update":null,"tags":["sql-injection","hacking"],"series":null},"fields":{"slug":"/sql-injection/","readingTime":{"minutes":3.16}}},"seriesList":{"edges":[{"node":{"id":"1b25e811-72ac-512b-9522-49560e93189a","fields":{"slug":"/sql-injection/"},"frontmatter":{"title":"SQL Intection 실습"}}},{"node":{"id":"2a7977d5-f794-5a7f-8c54-101800b6b158","fields":{"slug":"/install-java/"},"frontmatter":{"title":"Ubuntu에서 Java 설치"}}},{"node":{"id":"6213b11b-78c2-506c-9395-b147718bcd86","fields":{"slug":"/crack-korean/"},"frontmatter":{"title":"Flask Response 한글 깨짐 현상"}}},{"node":{"id":"b0763338-69a5-52ad-aacf-bbf982ef3915","fields":{"slug":"/quick-start/"},"frontmatter":{"title":"Flask - Quick start"}}},{"node":{"id":"766383f8-c227-579c-b1ea-416adc758aab","fields":{"slug":"/gh-pages-deploy/"},"frontmatter":{"title":"gh-pages로 React 배포하기"}}},{"node":{"id":"2eb2ba08-67ad-59e9-a749-1f9b6d114ea0","fields":{"slug":"/init-in-goormide/"},"frontmatter":{"title":"VScode에 Spring 개발환경 구축하기"}}},{"node":{"id":"d7a99c6e-99a0-5ad4-a556-bf3e49c30f4b","fields":{"slug":"/websocket/"},"frontmatter":{"title":"Springboot Stomp로 채팅 구현하기"}}},{"node":{"id":"6a3a5628-1b98-5ea5-918b-ca34e43a68a4","fields":{"slug":"/jwt/"},"frontmatter":{"title":"JWT(JSON Web Token)"}}},{"node":{"id":"59171b92-fc7b-5093-b399-cd2623be571c","fields":{"slug":"/ubuntu-sudo-apt-get-update/"},"frontmatter":{"title":"Ubuntu sudo apt-get update 다음 서명들은 공개키가 없기 때문에 인증할 수 없습니다"}}},{"node":{"id":"42874024-6dd7-5681-a13c-577e132f960c","fields":{"slug":"/codespace-cannot-read-png/"},"frontmatter":{"title":"Github Codespace 웹 보기를 로드하는 동안 오류가 발생했습니다."}}}]},"previous":null,"next":{"fields":{"slug":"/2110번-공유기-설치/"},"frontmatter":{"title":"2110번 공유기 설치 Python"}}},"pageContext":{"id":"1b25e811-72ac-512b-9522-49560e93189a","series":null,"previousPostId":null,"nextPostId":"50715778-56af-5e79-8e0e-7fdd09ab1bae"}},"staticQueryHashes":[]}