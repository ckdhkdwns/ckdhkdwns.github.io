{"componentChunkName":"component---src-templates-post-jsx","path":"/12851번-숨바꼭질2/","result":{"data":{"site":{"siteMetadata":{"title":"ckdhkdwns"}},"markdownRemark":{"id":"e3e21a07-fcec-5ee0-be6d-a47034d7c307","excerpt":"백준 12851번 - 숨바꼭질2 문제 수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에…","html":"<p><a href=\"https://www.acmicpc.net/problem/12851\">백준 12851번 - 숨바꼭질2</a></p>\n<h2>문제</h2>\n<p>수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.</p>\n<p>수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 그리고, 가장 빠른 시간으로 찾는 방법이 몇 가지 인지 구하는 프로그램을 작성하시오.</p>\n<h2>입력</h2>\n<p>첫 번째 줄에 수빈이가 있는 위치 N과 동생이 있는 위치 K가 주어진다. N과 K는 정수이다.</p>\n<h2>출력</h2>\n<p>첫째 줄에 수빈이가 동생을 찾는 가장 빠른 시간을 출력한다.\n둘째 줄에는 가장 빠른 시간으로 수빈이가 동생을 찾는 방법의 수를 출력한다.</p>\n<h2>풀이</h2>\n<p>이전 문제의 출력에서 가장 빠른 시간으로 수빈이가 동생을 찾는 방법의 수의 출력이 추가되었다. <a href=\"https://ckdhkdwns-solid-invention-67vpj755rpf47xv-8000.preview.app.github.dev/1698%EB%B2%88-%EC%88%A8%EB%B0%94%EA%BC%AD%EC%A7%88/\">이전 문제</a></p>\n<ol>\n<li>이전 문제와 똑같이 visited 리스트를 통해 동생을 찾는 가장 빠른 시간을 계산한다.</li>\n<li>visited 에서 다시 한 번 bfs 연산을 통해 동생을 찾는 방법의 수를 계산한다. </li>\n</ol>\n<p>동생을 찾는 가장 빠른 시간은 수빈이의 위치에서부터 연산을 시작한 반면,<br>\n동생을 찾는 방법의 수는 동생의 위치에서부터 연산을 시작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\nn<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nq <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\nvisited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nvisited<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> q<span class=\"token punctuation\">:</span>\n  v <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> v <span class=\"token operator\">==</span> k<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">break</span>\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100000</span> <span class=\"token keyword\">and</span> visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n      visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>    \n      q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n      \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 동생을 찾는 방법의 수</span>\n\nqq <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 동생의 위치부터 시작한다</span>\n\n<span class=\"token keyword\">while</span> qq<span class=\"token punctuation\">:</span>\n  v <span class=\"token operator\">=</span> qq<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 수빈이의 시작 위치로 왔으면 </span>\n  <span class=\"token keyword\">if</span> visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 현재 위치 v 의 이전 위치를 찾는 과정</span>\n    l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> v <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">[</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> v<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 위치가 홀수이면 v/2가 정수가 아니므로 </span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100000</span> <span class=\"token keyword\">and</span> visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> visited<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> \n        qq<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n\n </code></pre></div>","frontmatter":{"title":"12851번 숨바꼭질2","date":"November 19, 2022","update":null,"tags":["python","graph","bfs"],"series":"Baekjoon"},"fields":{"slug":"/12851번-숨바꼭질2/","readingTime":{"minutes":3.185}}},"seriesList":{"edges":[{"node":{"id":"50715778-56af-5e79-8e0e-7fdd09ab1bae","fields":{"slug":"/2110번-공유기-설치/"},"frontmatter":{"title":"2110번 공유기 설치 Python"}}},{"node":{"id":"bca6c149-9f25-565a-ba6f-4b9876a7f58e","fields":{"slug":"/1389번-케빈-베이컨의-6단계-법칙/"},"frontmatter":{"title":"1389번 케빈 베이컨의 6단계 법칙 Python"}}},{"node":{"id":"c155e8eb-ef64-5fae-8960-dde038bfe883","fields":{"slug":"/1309번-동물원/"},"frontmatter":{"title":"1309번 동물원 Python"}}},{"node":{"id":"552339f4-3461-57c8-80d3-f8f866e04c50","fields":{"slug":"/1038번-감소하는-수/"},"frontmatter":{"title":"1038번 감소하는 수 Python"}}},{"node":{"id":"d820945d-f3c5-557e-b963-04bc6db32ae2","fields":{"slug":"/1541번-잃어버린-괄호/"},"frontmatter":{"title":"1541번 잃어버린 괄호 Python"}}},{"node":{"id":"b1dc091b-83a2-566d-afab-2827a1104a54","fields":{"slug":"/14502번-연구소/"},"frontmatter":{"title":"14502번 연구소 Python"}}},{"node":{"id":"e5f06c57-c1dc-5c9c-98e8-6843b4b6bb49","fields":{"slug":"/10026번-적록색약/"},"frontmatter":{"title":"10026번 적록색약 Python"}}},{"node":{"id":"bde52d5c-c819-53cb-ac7b-18028102b9ba","fields":{"slug":"/1916번-최소비용-구하기/"},"frontmatter":{"title":"1916번 최소비용 구하기 Python"}}},{"node":{"id":"97e8ff13-b1eb-5147-beb6-fc2308cca025","fields":{"slug":"/7569번-토마토/"},"frontmatter":{"title":"7569번 토마토 Python"}}},{"node":{"id":"e945eb81-556e-58db-83da-78a225420e0d","fields":{"slug":"/1698번-숨바꼭질/"},"frontmatter":{"title":"1698번 숨바꼭질"}}},{"node":{"id":"e3e21a07-fcec-5ee0-be6d-a47034d7c307","fields":{"slug":"/12851번-숨바꼭질2/"},"frontmatter":{"title":"12851번 숨바꼭질2"}}},{"node":{"id":"1424ff93-cb8b-5197-8559-0db2cd72154d","fields":{"slug":"/1068번-트리/"},"frontmatter":{"title":"1068번 트리 Python"}}},{"node":{"id":"11130692-d764-5ec9-95c6-e95f4dd616cc","fields":{"slug":"/2579번-계단-오르기/"},"frontmatter":{"title":"2579번 계단 오르기 Python"}}},{"node":{"id":"73a4dc17-1012-5910-a4cf-11f04c2315c4","fields":{"slug":"/1058번-친구/"},"frontmatter":{"title":"1058번 친구 Python"}}}]},"previous":{"fields":{"slug":"/1698번-숨바꼭질/"},"frontmatter":{"title":"1698번 숨바꼭질"}},"next":{"fields":{"slug":"/1068번-트리/"},"frontmatter":{"title":"1068번 트리 Python"}}},"pageContext":{"id":"e3e21a07-fcec-5ee0-be6d-a47034d7c307","series":"Baekjoon","previousPostId":"e945eb81-556e-58db-83da-78a225420e0d","nextPostId":"1424ff93-cb8b-5197-8559-0db2cd72154d"}},"staticQueryHashes":[]}