{"componentChunkName":"component---src-templates-post-jsx","path":"/1058번-친구/","result":{"data":{"site":{"siteMetadata":{"title":"ckdhkdwns"}},"markdownRemark":{"id":"cbe23adf-e766-588b-ab57-ab866c078d51","excerpt":"풀이 1 친구 관계를 인접 리스트 형태로 저장했습니다. 예를 들어 보겠습니다.  A의 친구 : B, C B의 친구 : A, D C의 친구 : A, D 의 관계가 있을 때, A의 2-친구를 구하기 위해 라는 리스트를 만듭니다. 이 리스트에는 두 종류의 원소들이 들어갑니다. A의 친구들 A의 친구들의 친구들   현재 테스트 케이스를 기준으로 하면  가 됩니다…","html":"<div style='display: flex; gap: 20px;'><div style='color: gray; font-size: 17px;'>[Silver II]</div><a href='https://www.acmicpc.net/problem/1058'> 백준 1058번 - 친구</a></div>\n<h3>풀이 1</h3>\n<p>친구 관계를 인접 리스트 형태로 저장했습니다.<br>\n예를 들어 보겠습니다. </p>\n<ul>\n<li>A의 친구 : B, C</li>\n<li>B의 친구 : A, D</li>\n<li>C의 친구 : A, D</li>\n</ul>\n<p>의 관계가 있을 때, A의 <em>2-친구</em>를 구하기 위해 <code class=\"language-text\">t</code>라는 리스트를 만듭니다. 이 리스트에는 두 종류의 원소들이 들어갑니다.</p>\n<ol>\n<li>A의 친구들</li>\n<li>A의 친구들의 친구들  </li>\n</ol>\n<p>현재 테스트 케이스를 기준으로 하면 <code class=\"language-text\">t = ['B', 'C', 'A, 'D', 'A', 'D']</code> 가 됩니다.</p>\n<p>여기서 <code class=\"language-text\">set</code> 자료구조를 통해 리스트 내의 중복을 제거합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">temp <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\ntemp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span></code></pre></div>\n<p>각 원소들마다 위의 과정을 수행해 결과값 중 가장 큰 값을 구합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#1058번 친구</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> copy\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ngraph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  t <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> t<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">:</span>\n      graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n\nresults <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  temp <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    temp<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  temp <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n  temp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> temp<span class=\"token punctuation\">:</span>\n    temp<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>풀이 2</h3>\n<p><strong>플로이드 워셜</strong> 로 해결합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ngraph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nconnected <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 그래프 구성</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    line <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Y'</span><span class=\"token punctuation\">:</span>\n            graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 플로이드-와샬 알고리즘 수행</span>\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">if</span> i<span class=\"token operator\">==</span>j<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n          <span class=\"token keyword\">if</span> graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> graph<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            connected<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            \n\n<span class=\"token comment\"># 2-친구의 수 계산</span>\nmax_friends <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> connected<span class=\"token punctuation\">:</span>\n  max_friends <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>max_friends<span class=\"token punctuation\">,</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>max_friends<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"1058번 친구 Python","date":"April 20, 2023","update":null,"tags":["python","graph"],"series":"Baekjoon"},"fields":{"slug":"/1058번-친구/","readingTime":{"minutes":2.095}}},"seriesList":{"edges":[{"node":{"id":"376b1c3a-a145-5443-ba01-4dbe382929cc","fields":{"slug":"/2110번-공유기-설치/"},"frontmatter":{"title":"2110번 공유기 설치 Python"}}},{"node":{"id":"de041a93-b2d9-57d5-8da3-d9e5712918c2","fields":{"slug":"/1389번-케빈-베이컨의-6단계-법칙/"},"frontmatter":{"title":"1389번 케빈 베이컨의 6단계 법칙 Python"}}},{"node":{"id":"f0ffb10c-d219-5cd1-8255-f1800d078342","fields":{"slug":"/1309번-동물원/"},"frontmatter":{"title":"1309번 동물원 Python"}}},{"node":{"id":"09c6279b-ab5c-5526-8bad-50a80101906f","fields":{"slug":"/1038번-감소하는-수/"},"frontmatter":{"title":"1038번 감소하는 수 Python"}}},{"node":{"id":"b41a61e5-0952-5829-b572-ba5809701aec","fields":{"slug":"/1541번-잃어버린-괄호/"},"frontmatter":{"title":"1541번 잃어버린 괄호 Python"}}},{"node":{"id":"83cb17cb-586e-5695-a214-f9b3dec015c3","fields":{"slug":"/14502번-연구소/"},"frontmatter":{"title":"14502번 연구소 Python"}}},{"node":{"id":"bd719565-5af9-5447-b2bd-06f061b5d856","fields":{"slug":"/10026번-적록색약/"},"frontmatter":{"title":"10026번 적록색약 Python"}}},{"node":{"id":"f5cb47e4-3119-51bb-b572-ae3a7e0e5116","fields":{"slug":"/1916번-최소비용-구하기/"},"frontmatter":{"title":"1916번 최소비용 구하기 Python"}}},{"node":{"id":"62d7fe39-c1b4-5bd0-a62f-7d545dba554c","fields":{"slug":"/7569번-토마토/"},"frontmatter":{"title":"7569번 토마토 Python"}}},{"node":{"id":"54dae091-58cd-57fe-b3e5-b2df71722998","fields":{"slug":"/1698번-숨바꼭질/"},"frontmatter":{"title":"1698번 숨바꼭질"}}},{"node":{"id":"9406a112-3c7f-5e08-aaba-1ebe9e350bee","fields":{"slug":"/12851번-숨바꼭질2/"},"frontmatter":{"title":"12851번 숨바꼭질2"}}},{"node":{"id":"782278d2-8484-5221-8518-f0eec8b1a501","fields":{"slug":"/1068번-트리/"},"frontmatter":{"title":"1068번 트리 Python"}}},{"node":{"id":"85015140-3a22-5cbf-9a8e-ee68c78e41e9","fields":{"slug":"/2579번-계단-오르기/"},"frontmatter":{"title":"2579번 계단 오르기 Python"}}},{"node":{"id":"cbe23adf-e766-588b-ab57-ab866c078d51","fields":{"slug":"/1058번-친구/"},"frontmatter":{"title":"1058번 친구 Python"}}}]},"previous":{"fields":{"slug":"/2579번-계단-오르기/"},"frontmatter":{"title":"2579번 계단 오르기 Python"}},"next":{"fields":{"slug":"/리스트-중복제거/"},"frontmatter":{"title":"[Python] 리스트 내 원소들의 중복을 제거하기"}}},"pageContext":{"id":"cbe23adf-e766-588b-ab57-ab866c078d51","series":"Baekjoon","previousPostId":"85015140-3a22-5cbf-9a8e-ee68c78e41e9","nextPostId":"17126a96-98d7-53db-bb54-21e11b3608a7"}},"staticQueryHashes":[]}